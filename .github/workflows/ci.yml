name: Lawn Management CI

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: testing
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          extensions: mbstring, pdo, pdo_mysql
          coverage: xdebug
          tools: composer:v2

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}

      - name: Install Composer dependencies
        run: |
          composer install --prefer-dist --no-progress --no-suggest

      - name: Prepare Laravel environment
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: testing
          DB_USERNAME: root
          DB_PASSWORD: password
        run: |
          cp .env.testing.example .env.testing
          php artisan key:generate --env=testing

      - name: Run Rector checks
        run: php ./vendor/bin/rector --dry-run

      - name: Run Linting checks
        run: php ./vendor/bin/pint --test

      - name: Run Type Coverage
        run: php -d memory_limit=-1 vendor/bin/pest --type-coverage --min=97.5

      - name: Run PHPStan Analysis
        run: php -d memory_limit=-1 ./vendor/bin/phpstan analyse --configuration=phpstan.neon

      - name: Run Test Coverage
        run: php -d memory_limit=-1 vendor/bin/pest --parallel --coverage --exactly=79.6

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ github.sha }}
          path: coverage
          retention-days: 7

  notify:
    needs: test
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Notify on Failure
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: 'Tests failed on ${{ github.ref }}'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
