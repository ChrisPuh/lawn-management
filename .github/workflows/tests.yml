name: Laravel CI/CD

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      WWWGROUP: 1000
      WWWUSER: 1000
      DB_DATABASE: testing
      DB_USERNAME: root
      DB_PASSWORD: root

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Prepare Environment
        run: |
          cp .env.example .env
          cp .env.example .env.testing
          sed -i 's/DB_HOST=127.0.0.1/DB_HOST=mysql/' .env.testing
          sed -i 's/DB_PASSWORD=/DB_PASSWORD=root/' .env.testing

      - name: Start Docker Containers
        run: |
          docker-compose up -d
          sleep 20  # Warte, bis Dienste bereit sind

      - name: Install Composer Dependencies
        run: |
          docker-compose exec -T laravel.test composer install --prefer-dist --no-progress --no-suggest

      - name: Generate Application Key
        run: |
          docker-compose exec -T laravel.test php artisan key:generate
          docker-compose exec -T laravel.test php artisan key:generate --env=testing

      - name: Run Database Migrations
        run: |
          docker-compose exec -T laravel.test php artisan migrate:fresh --env=testing

      - name: Run Tests
        run: |
          docker-compose exec -T laravel.test composer test

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          fail_ci_if_error: true

      - name: Archive Logs on Failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: laravel-logs
          path: |
            storage/logs/
            docker-compose.log

      - name: Tear Down Docker Containers
        if: always()
        run: docker-compose down
